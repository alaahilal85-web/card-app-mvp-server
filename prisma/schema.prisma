generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String   @id @default(cuid())
  phone         String   @unique
  displayName   String?
  phoneVerified Boolean  @default(false)
  idVerified    Boolean  @default(false)
  reputation    Int      @default(0)
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
  listings      Listing[]
  joinRequests  JoinRequest[]
}

model Venue {
  id          String   @id @default(cuid())
  name        String
  address     String?
  lat         Float
  lng         Float
  partner     Boolean  @default(false)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  listings    Listing[]
}

enum ListingStatus {
  OPEN
  RESERVED
  IN_PROGRESS
  COMPLETED
  EXPIRED
}

model Listing {
  id           String         @id @default(cuid())
  hostId       String
  host         User           @relation(fields: [hostId], references: [id])
  venueId      String?
  venue        Venue?         @relation(fields: [venueId], references: [id])
  lat          Float
  lng          Float
  game         String
  skill        String?
  language     String?
  radiusKm     Int            @default(15)
  status       ListingStatus  @default(OPEN)
  expiresAt    DateTime
  joinToken    String?
  createdAt    DateTime       @default(now())
  updatedAt    DateTime       @updatedAt
  requests     JoinRequest[]
  sessions     Session[]
}

enum RequestStatus {
  PENDING
  ACCEPTED
  DECLINED
  CANCELLED
}

model JoinRequest {
  id         String        @id @default(cuid())
  listingId  String
  listing    Listing       @relation(fields: [listingId], references: [id])
  seekerId   String
  seeker     User          @relation(fields: [seekerId], references: [id])
  status     RequestStatus @default(PENDING)
  createdAt  DateTime      @default(now())
  updatedAt  DateTime      @updatedAt
}

model Session {
  id         String    @id @default(cuid())
  listingId  String
  listing    Listing   @relation(fields: [listingId], references: [id])
  startedAt  DateTime?
  endedAt    DateTime?
  createdAt  DateTime  @default(now())
  updatedAt  DateTime  @updatedAt
}
